name: Deploy to VPS

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/deploy.yml"
      - "Dockerfile"
      - "docker-compose.yml"
      - "nginx/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"
      - "next.config.*"
      - "app/**"
      - "components/**"
      - "public/**"

concurrency:
  group: deploy-vps-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        shell: bash
        run: |
          set -eu
          umask 077
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ci
          chmod 600 ~/.ssh/id_ci
          ssh-keyscan -H "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts

      - name: Test SSH connectivity
        shell: bash
        run: ssh -i ~/.ssh/id_ci "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" "echo ok"

      - name: Sync repo to server (rsync)
        shell: bash
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -eu
          rsync -az --delete             --exclude ".git"             --exclude "node_modules"             --exclude ".next"             -e "ssh -i ~/.ssh/id_ci"             ./ "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}"

      - name: Build & Up (write .env with COMMIT/VERSION)
        shell: bash
        run: |
          set -eu
          ssh -i ~/.ssh/id_ci "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" << EOF
            set -euo pipefail
            export DOCKER_BUILDKIT=1
            export COMPOSE_DOCKER_CLI_BUILD=1
            cd "${{ secrets.DEPLOY_PATH }}"
            # Write .env from repo package.json and Actions SHA
            COMMIT="$(echo "${GITHUB_SHA}" | cut -c1-7)"
            VERSION="$(node -p "require('./package.json').version" || echo "unknown")"
            printf "COMMIT=%s\nVERSION=%s\n" "\${COMMIT}" "\${VERSION}" > .env
            echo "Wrote .env:"; cat .env
            # Recreate stack on port 3005
            docker compose down || true
            docker ps --filter "publish=3005" --format "{{.ID}}" | xargs -r docker stop
            docker ps -a --filter "publish=3005" --format "{{.ID}}" | xargs -r docker rm
            docker compose pull || true
            docker compose build --pull
            docker compose up -d --remove-orphans
            docker compose ps
          EOF

      - name: Post-deploy health check
        shell: bash
        run: |
          set -eu
          URL="http://2pac.ru/api/health"
          echo "Checking \$URL ..."
          for i in $(seq 1 30); do
            CODE=$(curl -s -o /tmp/health.json -w "%{http_code}" "$URL" || true)
            if [ "$CODE" = "200" ] && grep -q '"status":"ok"' /tmp/health.json; then
              echo "Health OK:"
              cat /tmp/health.json
              exit 0
            fi
            echo "Try #$i: code=$CODE, waiting..."
            sleep 4
          done
          echo "Health check failed. Last body:"
          cat /tmp/health.json || true
          exit 1
