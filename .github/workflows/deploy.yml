name: Deploy to VPS

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/deploy.yml"
      - "Dockerfile"
      - "docker-compose.yml"
      - "nginx/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"
      - "next.config.*"
      - "app/**"
      - "components/**"
      - "public/**"

concurrency:
  group: deploy-vps-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          set -eu
          umask 077
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ci
          chmod 600 ~/.ssh/id_ci
          ssh-keyscan -H "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts

      - name: Test SSH connectivity
        run: ssh -i ~/.ssh/id_ci "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" "echo ok"

      - name: Sync repo to server (rsync)
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -eu
          rsync -az --delete \
            --exclude ".git" \
            --exclude "node_modules" \
            --exclude ".next" \
            -e "ssh -i ~/.ssh/id_ci" \
            ./ "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}"

      - name: Compose up on server
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -eu
          ssh -i ~/.ssh/id_ci "${DEPLOY_USER}@${DEPLOY_HOST}" << EOF
            set -euo pipefail
            cd "${DEPLOY_PATH}"
            docker compose pull || true
            docker compose build --pull
            docker compose up -d --remove-orphans
            docker compose ps
          EOF
